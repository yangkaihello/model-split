<?php
/**
 * Created by PhpStorm.
 * User: yangkai
 * Date: 2018/11/10
 * Time: 下午4:36
 */

namespace yangkai\split;

use yii\db\Exception;
use yii\helpers\Inflector;
use yii\helpers\StringHelper;

abstract class BaseModel extends \yii\db\ActiveRecord
{

    public $_tableNum = 8;   //分表数量最好是 2 4 8 16
    public $_createRuleField = [];    //分表规则

    protected $_splitTable = [];    //分割的表格
    protected $_existTable = [];    //已经存在的表格
    protected static $_useTable = null;    //使用中的表格

    /**
     * @throws \Exception
     */
    public function init()
    {
        for($i=0;$i<$this->_tableNum;$i++)
        {
            $splitTable = $this->setTableName($i);

            $this->_splitTable[$i] = $splitTable;
            if($this->hasTable($splitTable))
            {
                $this->_existTable[$i] = $splitTable;
            }

        }

        if(!$this->_createRuleField)
        {
            throw new \Exception("Using automatic tables must exist: public \$_createRuleField");
        }

        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * tableName 作用于自动划分表格
     * @return null|string
     */
    public static function tableName()
    {
        if( isset(self::$_useTable) )
        {
            $tableName = self::$_useTable;
        }else{
            $tableName = '{{%' . Inflector::camel2id(StringHelper::basename(get_called_class()), '_') . '}}';
        }

        return $tableName;
    }

    /**
     * 原本的 static::tableName() 的代替品
     * @return string
     */
    public static function createTableName()
    {
        return '{{%' . Inflector::camel2id(StringHelper::basename(get_called_class()), '_') . '}}';
    }

    public function createTableNum()
    {
        $dec = $this->_rule();

        if( !isset($this->_existTable[$dec]) )
        {
            $this->copyTable($this->_splitTable[$dec]);
            $this->_existTable[$dec] = $this->setTableName($dec);
        }

        self::$_useTable = $this->_existTable[$dec];

        return $this;
    }

    public function hasTable($tableName)
    {
        $tableName = $this->setTrueTableName($tableName);

        $isTable = \Yii::$app->db->createCommand("SHOW TABLES like '{$tableName}'")->execute();
        if($isTable)
        {
            return true;
        }else{
            return false;
        }
    }

    /**
     * 还原多操作数据库表格
     * @return $this
     */
    public function restoreModel()
    {
        self::$_useTable = null;
        return $this;
    }

    /**
     * 获取验证规则中的当前表格
     * @return int
     * @throws Exception
     */
    protected function _rule()
    {
        $rule = [];
        foreach($this->_createRuleField as $value)
        {
            if( !isset($this->$value) )
            {
                throw new Exception("model The lack of：{$value} rule");
            }
            $rule[] = $this->$value;
        }

        $rule = implode(".",$rule);
        $dec = hexdec(md5($rule){0})%$this->_tableNum;

        return $dec;
    }

    /**
     * 拷贝表格
     * @param $copyTableName
     * @return int
     */
    private function copyTable($copyTableName)
    {
        $tableName = static::createTableName();

        $trueTableName = $this->setTrueTableName($tableName,false);
        $copyTableName  = $this->setTrueTableName($copyTableName,false);

        $tableDesc = \Yii::$app->db->createCommand("SHOW CREATE TABLE {$tableName}")->queryOne();
        $tableDesc = array_pop($tableDesc);

        $tableDesc = preg_replace(
            ["/{$trueTableName}/ims","/AUTO_INCREMENT=[0-9]+/ims"],
            [$copyTableName,null],
            $tableDesc,1
        );

        return \Yii::$app->db->createCommand($tableDesc)->execute();
    }

    /**
     * @param $num int 表序号
     * @return string
     */
    private function setTableName($num)
    {
        return '{{%' . Inflector::camel2id(StringHelper::basename(get_called_class()), '_') . "_{$num}" . '}}';
    }

    /**
     * @param $tableName 表名
     * @return mixed
     */
    private function setTrueTableName($tableName,$isPercent = true)
    {
        if(strpos(trim($tableName),'{{') == 0)
        {
            $arr = $isPercent ? ['{{','}}'] : ['{{','}}','%'];
            $tableName = str_replace($arr,null,$tableName);
        }
        return $tableName;
    }

}